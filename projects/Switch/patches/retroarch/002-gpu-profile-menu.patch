diff --git a/intl/msg_hash_lbl.h b/intl/msg_hash_lbl.h
index 7dfbd39..bc251b3 100644
--- a/intl/msg_hash_lbl.h
+++ b/intl/msg_hash_lbl.h
@@ -1,3 +1,5 @@
+MSG_HASH(MENU_ENUM_LABEL_SWITCH_GPU_PROFILE,
+      "switch_gpu_profile")
 MSG_HASH(MENU_ENUM_LABEL_ACCOUNTS_CHEEVOS_USERNAME,
       "accounts_cheevos_username")
 MSG_HASH(MENU_ENUM_LABEL_ACCOUNTS_LIST,
diff --git a/intl/msg_hash_us.h b/intl/msg_hash_us.h
index c55f1be..f8f515a 100644
--- a/intl/msg_hash_us.h
+++ b/intl/msg_hash_us.h
@@ -3,6 +3,14 @@ MSG_HASH(
       "Compiler"
       )
 MSG_HASH(
+      MENU_ENUM_LABEL_VALUE_SWITCH_GPU_PROFILE,
+      "Set Switch GPU profile"
+      )
+MSG_HASH(
+      MENU_ENUM_SUBLABEL_SWITCH_GPU_PROFILE,
+      "Overclock or underclock the Switch GPU"
+      )
+MSG_HASH(
       MSG_UNKNOWN_COMPILER,
       "Unknown compiler"
       )
diff --git a/menu/cbs/menu_cbs_deferred_push.c b/menu/cbs/menu_cbs_deferred_push.c
index c3bb236..e93fcf8 100644
--- a/menu/cbs/menu_cbs_deferred_push.c
+++ b/menu/cbs/menu_cbs_deferred_push.c
@@ -95,6 +95,7 @@ generic_deferred_push(deferred_push_configurations_list,            DISPLAYLIST_
 generic_deferred_push(deferred_push_load_content_special,           DISPLAYLIST_LOAD_CONTENT_LIST)
 generic_deferred_push(deferred_push_load_content_list,              DISPLAYLIST_LOAD_CONTENT_LIST)
 generic_deferred_push(deferred_push_information_list,               DISPLAYLIST_INFORMATION_LIST)
+generic_deferred_push(deferred_push_switch_gpu_profile,             DISPLAYLIST_SWITCH_GPU_PROFILE)
 generic_deferred_push(deferred_archive_action_detect_core,          DISPLAYLIST_ARCHIVE_ACTION_DETECT_CORE)
 generic_deferred_push(deferred_archive_action,                      DISPLAYLIST_ARCHIVE_ACTION)
 generic_deferred_push(deferred_push_management_options,             DISPLAYLIST_OPTIONS_MANAGEMENT)
@@ -877,6 +878,11 @@ static int menu_cbs_init_bind_deferred_push_compare_label(
       BIND_ACTION_DEFERRED_PUSH(cbs, deferred_push_information_list);
    }
    else if (strstr(label,
+            msg_hash_to_str(MENU_ENUM_LABEL_SWITCH_GPU_PROFILE)))
+   {
+      BIND_ACTION_DEFERRED_PUSH(cbs, deferred_push_switch_gpu_profile);
+   }
+   else if (strstr(label,
             msg_hash_to_str(MENU_ENUM_LABEL_SHADER_OPTIONS)))
    {
       BIND_ACTION_DEFERRED_PUSH(cbs, deferred_push_shader_options);
diff --git a/menu/cbs/menu_cbs_ok.c b/menu/cbs/menu_cbs_ok.c
index ff85e2c..e2ca554 100644
--- a/menu/cbs/menu_cbs_ok.c
+++ b/menu/cbs/menu_cbs_ok.c
@@ -2409,6 +2409,24 @@ static int action_ok_file_load_imageviewer(const char *path,
    return default_action_ok_load_content_with_core_from_menu(fullpath, CORE_TYPE_IMAGEVIEWER);
 }
 
+static int action_ok_set_switch_gpu_profile(const char *path,
+      const char *label, unsigned type, size_t idx, size_t entry_idx)
+{
+	char* profile_name = SWITCH_GPU_PROFILES[entry_idx];
+	
+	char command[PATH_MAX_LENGTH] = {0};
+	
+	snprintf(command, sizeof(command), "gpu-profile set %s", profile_name);
+	
+        system(command);
+        
+        snprintf(command, sizeof(command), "Current profile set to %s", profile_name);
+        
+        runloop_msg_queue_push(command, 1, 90, true);
+
+	return menu_cbs_exit();
+}
+
 static int action_ok_file_load_current_core(const char *path,
       const char *label, unsigned type, size_t idx, size_t entry_idx)
 {
@@ -4264,6 +4282,7 @@ static int menu_cbs_init_bind_ok_compare_label(menu_file_list_cbs_t *cbs,
          case MENU_ENUM_LABEL_CONFIGURATIONS_LIST:
          case MENU_ENUM_LABEL_HELP_LIST:
          case MENU_ENUM_LABEL_INFORMATION_LIST:
+         case MENU_ENUM_LABEL_SWITCH_GPU_PROFILE:
          case MENU_ENUM_LABEL_CONTENT_SETTINGS:
             BIND_ACTION_OK(cbs, action_ok_push_default);
             break;
@@ -4604,6 +4623,9 @@ static int menu_cbs_init_bind_ok_compare_type(menu_file_list_cbs_t *cbs,
                BIND_ACTION_OK(cbs, action_ok_playlist_entry);
             }
             break;
+         case MENU_SET_SWITCH_GPU_PROFILE:
+            BIND_ACTION_OK(cbs, action_ok_set_switch_gpu_profile);
+            break;
          case FILE_TYPE_RPL_ENTRY:
             BIND_ACTION_OK(cbs, action_ok_rpl_entry);
             break;
diff --git a/menu/cbs/menu_cbs_sublabel.c b/menu/cbs/menu_cbs_sublabel.c
index 0369e15..d85d48b 100644
--- a/menu/cbs/menu_cbs_sublabel.c
+++ b/menu/cbs/menu_cbs_sublabel.c
@@ -49,6 +49,7 @@
 }
 
 default_sublabel_macro(action_bind_sublabel_crt_switchres,             MENU_ENUM_SUBLABEL_CRT_SWITCH_RESOLUTION)
+default_sublabel_macro(action_bind_sublabel_switch_gpu_profile,             MENU_ENUM_SUBLABEL_SWITCH_GPU_PROFILE)
 default_sublabel_macro(action_bind_sublabel_crt_switchres_super,       MENU_ENUM_SUBLABEL_CRT_SWITCH_RESOLUTION_SUPER)
 default_sublabel_macro(action_bind_sublabel_automatically_add_content_to_playlist,             MENU_ENUM_SUBLABEL_AUTOMATICALLY_ADD_CONTENT_TO_PLAYLIST)
 default_sublabel_macro(action_bind_sublabel_driver_settings_list,             MENU_ENUM_SUBLABEL_DRIVER_SETTINGS)
@@ -1504,6 +1505,9 @@ int menu_cbs_init_bind_sublabel(menu_file_list_cbs_t *cbs,
          case MENU_ENUM_LABEL_INFORMATION_LIST:
             BIND_ACTION_SUBLABEL(cbs, action_bind_sublabel_information_list_list);
             break;
+         case MENU_ENUM_LABEL_SWITCH_GPU_PROFILE:
+            BIND_ACTION_SUBLABEL(cbs, action_bind_sublabel_switch_gpu_profile);
+            break;
          case MENU_ENUM_LABEL_NETPLAY:
             BIND_ACTION_SUBLABEL(cbs, action_bind_sublabel_netplay_settings);
             break;
diff --git a/menu/cbs/menu_cbs_title.c b/menu/cbs/menu_cbs_title.c
index 0396b78..45700b7 100644
--- a/menu/cbs/menu_cbs_title.c
+++ b/menu/cbs/menu_cbs_title.c
@@ -135,6 +135,7 @@ default_title_macro(action_get_system_information_list,         MENU_ENUM_LABEL_
 default_title_macro(action_get_network_information_list,        MENU_ENUM_LABEL_VALUE_NETWORK_INFORMATION)
 default_title_macro(action_get_settings_list,                   MENU_ENUM_LABEL_VALUE_SETTINGS)
 default_title_macro(action_get_title_information_list,          MENU_ENUM_LABEL_VALUE_INFORMATION_LIST)
+default_title_macro(action_get_title_switch_gpu_profile,        MENU_ENUM_LABEL_VALUE_SWITCH_GPU_PROFILE)
 default_title_macro(action_get_title_goto_favorites,            MENU_ENUM_LABEL_VALUE_GOTO_FAVORITES)
 default_title_macro(action_get_title_goto_image,                MENU_ENUM_LABEL_VALUE_GOTO_IMAGES)
 default_title_macro(action_get_title_goto_music,                MENU_ENUM_LABEL_VALUE_GOTO_MUSIC)
@@ -621,6 +622,9 @@ static int menu_cbs_init_bind_title_compare_label(menu_file_list_cbs_t *cbs,
          case MENU_ENUM_LABEL_RGUI_CONFIG_DIRECTORY:
             BIND_ACTION_GET_TITLE(cbs, action_get_title_config_directory);
             break;
+         case MENU_ENUM_LABEL_SWITCH_GPU_PROFILE:
+            BIND_ACTION_GET_TITLE(cbs, action_get_title_switch_gpu_profile);
+            break;
          case MENU_ENUM_LABEL_INFORMATION_LIST:
             BIND_ACTION_GET_TITLE(cbs, action_get_title_information_list);
             break;
diff --git a/menu/drivers/xmb.c b/menu/drivers/xmb.c
index 57dffb8..8536a73 100755
--- a/menu/drivers/xmb.c
+++ b/menu/drivers/xmb.c
@@ -2318,6 +2318,7 @@ static uintptr_t xmb_icon_get_id(xmb_handle_t *xmb,
             return xmb->textures.list[XMB_TEXTURE_SUBSETTING];
          return xmb->textures.list[XMB_TEXTURE_SETTING];
       case MENU_SETTING_GROUP:
+      case MENU_SET_SWITCH_GPU_PROFILE:
          return xmb->textures.list[XMB_TEXTURE_SETTING];
       case MENU_INFO_MESSAGE:
          return xmb->textures.list[XMB_TEXTURE_CORE_INFO];
@@ -5066,6 +5067,9 @@ static int xmb_list_push(void *data, void *userdata,
                entry.enum_idx      = MENU_ENUM_LABEL_HELP_LIST;
                menu_displaylist_ctl(DISPLAYLIST_SETTING_ENUM, &entry);
             }
+            
+            entry.enum_idx      = MENU_ENUM_LABEL_SWITCH_GPU_PROFILE;
+            menu_displaylist_ctl(DISPLAYLIST_SETTING_ENUM, &entry);
 
 #if !defined(IOS)
             if (settings->bools.menu_show_quit_retroarch)
@@ -5080,6 +5084,7 @@ static int xmb_list_push(void *data, void *userdata,
                entry.enum_idx      = MENU_ENUM_LABEL_REBOOT;
                menu_displaylist_ctl(DISPLAYLIST_SETTING_ENUM, &entry);
             }
+           
 
             entry.enum_idx      = MENU_ENUM_LABEL_SHUTDOWN;
             menu_displaylist_ctl(DISPLAYLIST_SETTING_ENUM, &entry);
diff --git a/menu/menu_displaylist.c b/menu/menu_displaylist.c
index 18e0409..7f3f76d 100644
--- a/menu/menu_displaylist.c
+++ b/menu/menu_displaylist.c
@@ -4222,6 +4222,52 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type, void *data)
 
    switch (type)
    {
+      case DISPLAYLIST_SWITCH_GPU_PROFILE:
+         {
+           char current_profile[PATH_MAX_LENGTH];
+           
+           FILE* profile = popen("gpu-profile get", "r");          
+           fgets(current_profile, PATH_MAX_LENGTH, profile);  
+           pclose(profile);
+           
+           menu_entries_ctl(MENU_ENTRIES_CTL_CLEAR, info->list);
+           
+           char text[PATH_MAX_LENGTH];
+           
+           snprintf(text, sizeof(text), "Current profile : %s", current_profile);
+           
+           menu_entries_append_enum(info->list,
+                     text,
+                     "",
+                     0,
+                     MENU_INFO_MESSAGE, 0, 0);
+           
+           const size_t profiles_count = sizeof(SWITCH_GPU_PROFILES)/sizeof(SWITCH_GPU_PROFILES[1]);
+                     
+            
+           for (int i = 0; i < profiles_count; i++)
+           {
+                char* profile = SWITCH_GPU_PROFILES[i];
+                char* speed = SWITCH_GPU_SPEEDS[i];
+                
+                char title[PATH_MAX_LENGTH] = {0};
+                
+                snprintf(title, sizeof(title), "%s (%s)", profile, speed);
+                
+           	menu_entries_append_enum(info->list, 
+           		title,
+           		"",
+           		0, MENU_SET_SWITCH_GPU_PROFILE, 0, i);
+           		
+           }         
+           		
+           
+           info->need_push    = true;
+           info->need_refresh = true;
+           info->need_clear   = true;
+           
+           break;
+         }
       case DISPLAYLIST_MUSIC_LIST:
          {
             char combined_path[PATH_MAX_LENGTH];
@@ -6591,6 +6637,9 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type, void *data)
                menu_displaylist_parse_settings_enum(menu, info,
                      MENU_ENUM_LABEL_QUIT_RETROARCH,
                      PARSE_ACTION, false);
+            menu_displaylist_parse_settings_enum(menu, info,
+                     MENU_ENUM_LABEL_SWITCH_GPU_PROFILE,
+                     PARSE_ACTION, false);
             if (settings->bools.menu_show_reboot)
                menu_displaylist_parse_settings_enum(menu, info,
                      MENU_ENUM_LABEL_REBOOT,
diff --git a/menu/menu_displaylist.h b/menu/menu_displaylist.h
index 3147c9f..a8a52d9 100644
--- a/menu/menu_displaylist.h
+++ b/menu/menu_displaylist.h
@@ -164,7 +164,8 @@ enum menu_displaylist_ctl_state
    DISPLAYLIST_CORE_CONTENT,
    DISPLAYLIST_CORE_CONTENT_DIRS,
    DISPLAYLIST_CORE_CONTENT_DIRS_SUBDIR,
-   DISPLAYLIST_PENDING_CLEAR
+   DISPLAYLIST_PENDING_CLEAR,
+   DISPLAYLIST_SWITCH_GPU_PROFILE
 };
 
 typedef struct menu_displaylist_info
diff --git a/menu/menu_driver.h b/menu/menu_driver.h
index aa66cd1..3000cb8 100644
--- a/menu/menu_driver.h
+++ b/menu/menu_driver.h
@@ -56,6 +56,41 @@ RETRO_BEGIN_DECLS
 #define MENU_SETTINGS_CHEEVOS_START              0x40000
 #define MENU_SETTINGS_NETPLAY_ROOMS_START        0x80000
 
+           
+   /* TODO Get those profiles by calling gpu-profile list */
+             
+   static char* SWITCH_GPU_PROFILES[] = {
+   	"docked-overclock-3",
+	"docked-overclock-2",
+	"docked-overclock-1",
+	"docked",
+    	"non-docked-overclock-5",
+    	"non-docked-overclock-4",
+  	"non-docked-overclock-3",
+   	"non-docked-overclock-2",
+    	"non-docked-overclock-1",
+    	"non-docked",
+    	"non-docked-underclock-1",
+    	"non-docked-underclock-2",
+    	"non-docked-underclock-3",
+   };
+   
+   static char* SWITCH_GPU_SPEEDS[] = {
+	    "998 Mhz",
+	    "921 Mhz",
+	    "844 Mhz",
+	    "768 Mhz",
+	    "691 Mhz",
+	    "614 Mhz",
+	    "537 Mhz",
+	    "460 Mhz",
+	    "384 Mhz",
+	    "307 Mhz",
+	    "230 Mhz",
+	    "153 Mhz",
+	    "76 Mhz"   
+   };
+
 enum menu_image_type
 {
    MENU_IMAGE_NONE = 0,
@@ -211,6 +246,8 @@ enum menu_settings_type
 
    MENU_SETTINGS_SUBSYSTEM_ADD,
    MENU_SETTINGS_SUBSYSTEM_LAST = MENU_SETTINGS_SUBSYSTEM_ADD + RARCH_MAX_SUBSYSTEMS,
+   
+   MENU_SET_SWITCH_GPU_PROFILE,
 
    MENU_SETTINGS_LAST
 };
diff --git a/menu/menu_setting.c b/menu/menu_setting.c
index 7685a13..706555b 100644
--- a/menu/menu_setting.c
+++ b/menu/menu_setting.c
@@ -2199,6 +2199,15 @@ static bool setting_append_list(
 #endif
 
 #if defined(HAVE_LAKKA)
+               
+        CONFIG_ACTION(
+               list, list_info,
+               MENU_ENUM_LABEL_SWITCH_GPU_PROFILE,
+               MENU_ENUM_LABEL_VALUE_SWITCH_GPU_PROFILE,
+               &group_info,
+               &subgroup_info,
+               parent_group);
+
          CONFIG_ACTION(
                list, list_info,
                MENU_ENUM_LABEL_REBOOT,
diff --git a/msg_hash.h b/msg_hash.h
index 6db6443..83495bb 100644
--- a/msg_hash.h
+++ b/msg_hash.h
@@ -1765,6 +1765,10 @@ enum msg_hash_enums
    MENU_LABEL(NETPLAY_USE_MITM_SERVER),
    MENU_LABEL(NETPLAY_MITM_SERVER),
    MENU_LABEL(VIDEO_WINDOW_SHOW_DECORATIONS),
+   
+   MENU_ENUM_LABEL_SWITCH_GPU_PROFILE,
+   MENU_ENUM_LABEL_VALUE_SWITCH_GPU_PROFILE,
+   MENU_ENUM_SUBLABEL_SWITCH_GPU_PROFILE,
 
    MSG_LAST
 };
